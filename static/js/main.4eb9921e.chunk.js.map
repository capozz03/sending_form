{"version":3,"sources":["Questions/Questions.module.css","Questions/Questions.js","Questions/QuestionsContainer.js","App.js","reportWebVitals.js","redux/questionReducer.js","redux/store.js","index.js"],"names":["module","exports","Questions","props","useState","value","setValue","useEffect","localStorage","setItem","question","JSON","stringify","console","log","parse","getItem","className","s","section__title","section__input","name","type","placeholder","onChange","e","target","QuestionsContainer","questionsList","useSelector","state","questions","map","list","id","app__button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","data","newTextAnswer","questionsReducer","reducer","combineReducers","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k1BACAA,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,eAAiB,kCAAkC,YAAc,iC,uHC+BvHC,EA7BG,SAACC,GACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OANAC,qBAAU,WACNC,aAAaC,QAAQN,EAAMO,SAAUC,KAAKC,UAAUP,OAGxDQ,QAAQC,IAAIH,KAAKI,MAAMP,aAAaQ,QAAQb,EAAMO,YAG9C,qCACA,qBAAKO,UAAWC,IAAEC,eAAlB,SACI,gCACKhB,EAAMO,aAGX,qBAAKO,UAAWC,IAAEE,eAAlB,SACI,uBAAOC,KAAMlB,EAAMO,SAAUY,KAAK,OAAOC,YAAY,6EAAiBC,SAnBtD,SAACC,GACzBtB,EAAMG,SAASmB,EAAEC,OAAOrB,OACxBC,EAASmB,EAAEC,OAAOrB,gB,OCgBXsB,EAnBY,WAEvB,MAA0BvB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMsB,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,iBAEjD,OACI,iCACKA,EAAcG,UAAUC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAWvB,SAAUuB,EAAKvB,SAAUwB,GAAID,EAAKC,GAAI5B,SAAUA,EAAUD,MAAOA,OAEjH,qBAAKY,UAAWC,IAAEiB,YAAlB,SACI,wBAAQb,KAAK,SAAb,0ECHDc,MAVf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,SCKOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLVQ,EAAe,CACff,U,MAAyBgB,KACzBC,cAAe,IAOJC,EAJU,WAA2B,IAA1BnB,EAAyB,uDAAjBgB,EAC9B,OAAOhB,GCLLoB,EAAUC,YAAgB,CAC5BvB,cAAeqB,IAING,EAAQC,YAAYH,GAGjCI,OAAOF,MAAQA,ECHfG,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.4eb9921e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"Questions_section__title__2Gokd\",\"section__input\":\"Questions_section__input__2cITM\",\"app__button\":\"Questions_app__button__1hxWG\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './Questions.module.css';\r\n\r\nconst Questions = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const onInputChangeGlobal = (e) => {\r\n        props.setValue(e.target.value);\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(props.question, JSON.stringify(value))\r\n    })\r\n\r\n    console.log(JSON.parse(localStorage.getItem(props.question)));\r\n\r\n    return (\r\n        <>\r\n        <div className={s.section__title}>\r\n            <label>\r\n                {props.question}\r\n            </label>\r\n        </div>\r\n            <div className={s.section__input}>\r\n                <input name={props.question} type=\"text\" placeholder=\"*Введите текст\" onChange={onInputChangeGlobal}/>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\nexport default Questions;","import React, { useEffect, useState, useCallback }  from 'react';\r\nimport Questions from './Questions';\r\nimport s from './Questions.module.css';\r\nimport { useSelector} from 'react-redux';\r\n\r\nconst QuestionsContainer = () => {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const questionsList = useSelector(state => state.questionsList);\r\n\r\n    return (\r\n        <form>\r\n            {questionsList.questions.map(list => <Questions question={list.question} id={list.id} setValue={setValue} value={value}/>)}\r\n            \r\n            <div className={s.app__button}>\r\n                <button type=\"submit\">Отправить</button>\r\n            </div>\r\n            \r\n        </form>\r\n)\r\n\r\n}    \r\n\r\nexport default QuestionsContainer\r\n","import './App.css';\nimport QuestionsContainer from './Questions/QuestionsContainer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <QuestionsContainer/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import questionsList from './../data.json';\r\n\r\nlet initialState = {\r\n    questions: questionsList.data,\r\n    newTextAnswer: ''\r\n};\r\n\r\nconst questionsReducer = (state = initialState) => {\r\n    return state;\r\n}\r\n\r\nexport default questionsReducer;","import { createStore, combineReducers } from 'redux';\r\nimport questionsReducer from './questionReducer'\r\n\r\nconst reducer = combineReducers({\r\n    questionsList: questionsReducer\r\n  })\r\n\r\n\r\nexport const store = createStore(reducer);\r\n\r\n\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}